CREATE EXTENSION IF NOT EXISTS vector;
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "conversations_email" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "conversations_email_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"email_cc" jsonb,
	"created_at" timestamp with time zone NOT NULL,
	"button_action" text NOT NULL,
	"notes" text,
	"is_perfect" boolean NOT NULL,
	"generated_api_request" text,
	"api_request_run" boolean NOT NULL,
	"docs_context" text,
	"past_replies_context" text,
	"user_id" integer,
	"conversation_id" bigint NOT NULL,
	"role" text NOT NULL,
	"metadata" jsonb,
	"response_to_id" bigint,
	"status" text,
	"message_id" text,
	"references" text,
	"email_from" text,
	"email_bcc" jsonb,
	"is_pinned" boolean NOT NULL,
	"is_flagged_as_bad" boolean NOT NULL,
	"slack_message_ts" text,
	"slack_channel" text,
	"gmail_message_id" text,
	"gmail_thread_id" text,
	"updated_at" timestamp with time zone NOT NULL,
	"prompt_info" jsonb,
	"body" "bytea",
	"cleaned_up_text" "bytea",
	"deleted_at" timestamp with time zone,
	"reason" varchar(65535),
	"email_to" varchar(65535),
	"skipped_generating_response_at" timestamp with time zone,
	"highlighted_text" "bytea"
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "conversations_file" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "conversations_file_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"name" text NOT NULL,
	"url" text NOT NULL,
	"mimetype" text NOT NULL,
	"size" integer NOT NULL,
	"created_at" timestamp with time zone NOT NULL,
	"email_id" bigint,
	"preview_url" text,
	"is_inline" boolean NOT NULL,
	"is_public" boolean NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"slug" varchar(50) NOT NULL,
	CONSTRAINT "conversations_file_slug_key" UNIQUE("slug")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "auth_group" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "auth_group_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(150) NOT NULL,
	CONSTRAINT "auth_group_name_key" UNIQUE("name")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "conversations_conversation" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "conversations_conversation_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"email_from" text,
	"subject" text,
	"created_at" timestamp with time zone NOT NULL,
	"status" text,
	"external_conversation_id" bigint,
	"external_customer_id" bigint,
	"mailbox_id" bigint NOT NULL,
	"email_from_name" text,
	"slug" varchar(50) NOT NULL,
	"last_user_email_created_at" timestamp with time zone,
	"conversation_provider" text,
	"updated_at" timestamp with time zone NOT NULL,
	"closed_at" timestamp with time zone,
	"assigned_to_id" integer,
	"summary" jsonb,
	"embedding" vector(1536),
	"embedding_text" text,
	CONSTRAINT "conversations_conversation_slug_key" UNIQUE("slug")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "conversations_escalation" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "conversations_escalation_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"slack_message_ts" text,
	"resolved_at" timestamp with time zone,
	"created_at" timestamp with time zone NOT NULL,
	"conversation_id" bigint NOT NULL,
	"slack_channel" text,
	"updated_at" timestamp with time zone NOT NULL,
	"summary" text,
	"user_id" integer
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "conversations_note" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "conversations_note_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone NOT NULL,
	"body" text NOT NULL,
	"user_id" integer,
	"role" text,
	"conversation_id" bigint NOT NULL,
	"slack_message_ts" text,
	"slack_channel" text,
	"updated_at" timestamp with time zone NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "conversations_reply_bk" (
	"id" bigint,
	"created_at" timestamp with time zone,
	"conversation_id" bigint,
	"customer_id" bigint,
	"question" text,
	"account_info" text,
	"purchase_info" text,
	"drafted_reply" text,
	"actual_reply" text,
	"notes" text,
	"is_perfect" boolean,
	"user_info" text,
	"is_ignored" boolean,
	"email" text,
	"help_docs" text,
	"past_replies" text,
	"api_request_run" boolean,
	"generated_api_request" text,
	"button_action" text,
	"user_id" integer,
	"tags" jsonb,
	"categories" jsonb,
	"subject" text,
	"cc" jsonb,
	"mailbox_id" bigint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "django_migrations" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "django_migrations_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"app" varchar(255) NOT NULL,
	"name" varchar(255) NOT NULL,
	"applied" timestamp with time zone NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "django_session" (
	"session_key" varchar(40) PRIMARY KEY NOT NULL,
	"session_data" text NOT NULL,
	"expire_date" timestamp with time zone NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "docs_category" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "docs_folder_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"name" text NOT NULL,
	"description" text,
	"mailbox_id" bigint NOT NULL,
	"slug" varchar(100),
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "mailboxes_gumroaduser" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "mailboxes_gumroaduser_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"email" varchar(255) NOT NULL,
	"name" varchar,
	"user_id" varchar,
	"stripe_connect_account_id" varchar,
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"admin_purchases_url" varchar,
	"value" numeric(12, 2),
	CONSTRAINT "mailboxes_gumroaduser_email_key" UNIQUE("email")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "docs_embedding" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "docs_embedding_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"title" text NOT NULL,
	"text" text,
	"embedding" jsonb,
	"article_id" bigint,
	"tokens" integer,
	"embedding_type" varchar(255),
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"embedding_vector" vector(1536)
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "mailboxes_transactionalemailaddressregex" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "mailboxes_transactionalemailaddressregex_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"email_regex" text NOT NULL,
	CONSTRAINT "mailboxes_transactionalemailaddressregex_regex_key" UNIQUE("email_regex")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "mailboxes_waitlistemail" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "mailboxes_waitlistemail_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"email" varchar(254) NOT NULL,
	CONSTRAINT "mailboxes_waitlistemail_email_key" UNIQUE("email")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "mailboxes_stylelinter" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "mailboxes_stylelinter_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"before" text NOT NULL,
	"after" text NOT NULL,
	"created_at" timestamp with time zone NOT NULL,
	"organization_id" bigint NOT NULL,
	"updated_at" timestamp with time zone NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "account_emailaddress" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "account_emailaddress_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"email" varchar(254) NOT NULL,
	"verified" boolean NOT NULL,
	"primary" boolean NOT NULL,
	"user_id" integer NOT NULL,
	CONSTRAINT "account_emailaddress_user_id_email_987c8728_uniq" UNIQUE("email","user_id")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "account_emailconfirmation" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "account_emailconfirmation_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"created" timestamp with time zone NOT NULL,
	"sent" timestamp with time zone,
	"key" varchar(64) NOT NULL,
	"email_address_id" integer NOT NULL,
	CONSTRAINT "account_emailconfirmation_key_key" UNIQUE("key")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "auth_user_user_permissions" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "auth_user_user_permissions_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"user_id" integer NOT NULL,
	"permission_id" integer NOT NULL,
	CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE("user_id","permission_id")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "workflows_workflowrun" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "workflows_workflowrun_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"workflow_info" jsonb NOT NULL,
	"workflow_conditions" jsonb NOT NULL,
	"conversation_id" bigint NOT NULL,
	"email_id" bigint NOT NULL,
	"mailbox_id" bigint NOT NULL,
	"workflow_id" bigint NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "workflows_workflowrunaction" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "workflows_workflowrunaction_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"action_type" text NOT NULL,
	"action_value" text NOT NULL,
	"workflow_run_id" bigint NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "auth_group_permissions" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "auth_group_permissions_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"group_id" integer NOT NULL,
	"permission_id" integer NOT NULL,
	CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE("group_id","permission_id")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "auth_user" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "auth_user_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"password" varchar(128) NOT NULL,
	"last_login" timestamp with time zone,
	"is_superuser" boolean NOT NULL,
	"username" varchar(150) NOT NULL,
	"first_name" varchar(150) NOT NULL,
	"last_name" varchar(150) NOT NULL,
	"email" varchar(254) NOT NULL,
	"is_staff" boolean NOT NULL,
	"is_active" boolean NOT NULL,
	"date_joined" timestamp with time zone NOT NULL,
	CONSTRAINT "auth_user_username_key" UNIQUE("username")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "auth_permission" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "auth_permission_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(255) NOT NULL,
	"content_type_id" integer NOT NULL,
	"codename" varchar(100) NOT NULL,
	CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE("content_type_id","codename")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "auth_user_groups" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "auth_user_groups_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"user_id" integer NOT NULL,
	"group_id" integer NOT NULL,
	CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE("user_id","group_id")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "authtoken_token" (
	"key" varchar(40) PRIMARY KEY NOT NULL,
	"created" timestamp with time zone NOT NULL,
	"user_id" integer NOT NULL,
	CONSTRAINT "authtoken_token_user_id_key" UNIQUE("user_id")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "django_admin_log" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "django_admin_log_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"action_time" timestamp with time zone NOT NULL,
	"object_id" text,
	"object_repr" varchar(200) NOT NULL,
	"action_flag" smallint NOT NULL,
	"change_message" text NOT NULL,
	"content_type_id" integer,
	"user_id" integer NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "django_content_type" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "django_content_type_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"app_label" varchar(100) NOT NULL,
	"model" varchar(100) NOT NULL,
	CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE("app_label","model")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "docs_article" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "docs_article_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"title" text NOT NULL,
	"description" text NOT NULL,
	"status" text NOT NULL,
	"category_id" bigint,
	"slug" varchar(100),
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "mailboxes_userprofile" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "mailboxes_userprofile_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"organization_id" bigint NOT NULL,
	"user_id" integer NOT NULL,
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"slack_user_id" varchar,
	CONSTRAINT "mailboxes_userprofile_user_id_key" UNIQUE("user_id")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "socialaccount_socialapp" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "socialaccount_socialapp_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"provider" varchar(30) NOT NULL,
	"name" varchar(40) NOT NULL,
	"client_id" varchar(191) NOT NULL,
	"secret" varchar(191) NOT NULL,
	"key" varchar(191) NOT NULL,
	"provider_id" varchar(200) NOT NULL,
	"settings" jsonb NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "workflows_workflow" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "workflows_workflow_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone NOT NULL,
	"name" text NOT NULL,
	"description" text NOT NULL,
	"order" integer NOT NULL,
	"mailbox_id" bigint NOT NULL,
	"workflow_type" text NOT NULL,
	"run_on_replies" boolean NOT NULL,
	"deleted_at" timestamp with time zone,
	"updated_at" timestamp with time zone NOT NULL,
	"auto_reply_from_metadata" boolean NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "workflows_workflowconditiongroup" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "workflows_workflowconditiongroup_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone NOT NULL,
	"workflow_id" bigint NOT NULL,
	"updated_at" timestamp with time zone NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "workflows_workflowcondition" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "workflows_workflowcondition_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone NOT NULL,
	"field" text NOT NULL,
	"operator" text NOT NULL,
	"value" text NOT NULL,
	"workflow_condition_group_id" bigint NOT NULL,
	"updated_at" timestamp with time zone NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "mailboxes_mailbox" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "mailboxes_mailbox_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"name" text NOT NULL,
	"created_at" timestamp with time zone NOT NULL,
	"custom_email_address" text,
	"slug" varchar(50) NOT NULL,
	"response_generator_prompt" jsonb,
	"organization_id" bigint NOT NULL,
	"slack_webhook_url" text,
	"slack_escalation_channel" text,
	"gmail_support_email_id" bigint,
	"slack_bot_token" text,
	"slack_bot_user_id" text,
	"slack_team_id" text,
	"prompt_updated_at" timestamp with time zone NOT NULL,
	"escalation_email_body" text,
	"updated_at" timestamp with time zone NOT NULL,
	"widget_hmac_secret" varchar(255) NOT NULL,
	CONSTRAINT "mailboxes_mailbox_custom_email_address_key" UNIQUE("custom_email_address"),
	CONSTRAINT "mailboxes_mailbox_slug_key" UNIQUE("slug"),
	CONSTRAINT "mailboxes_mailbox_support_email_id_key" UNIQUE("gmail_support_email_id")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "mailboxes_gmailsupportemail" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "mailboxes_supportemail_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"email" varchar(254) NOT NULL,
	"expires_at" timestamp with time zone,
	"created_at" timestamp with time zone NOT NULL,
	"history_id" integer,
	"updated_at" timestamp with time zone NOT NULL,
	"access_token" "bytea" NOT NULL,
	"refresh_token" "bytea" NOT NULL,
	CONSTRAINT "mailboxes_supportemail_email_key" UNIQUE("email")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "mailboxes_organization" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "mailboxes_organization_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"name" text,
	"is_style_linter_enabled" boolean NOT NULL,
	"is_onboarding_completed" boolean NOT NULL,
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"automated_replies_count" integer NOT NULL,
	"free_trial_ends_at" timestamp with time zone,
	"automated_replies_limit_exceeded_at" timestamp with time zone,
	"trial_expired_notification_sent_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "mailboxes_pinnedreply" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "mailboxes_pinnedreply_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"subject" text,
	"body" text NOT NULL,
	"reply" text NOT NULL,
	"created_at" timestamp with time zone NOT NULL,
	"mailbox_id" bigint NOT NULL,
	"email_id" bigint,
	"updated_at" timestamp with time zone NOT NULL,
	"embedding" vector(1536),
	CONSTRAINT "mailboxes_pinnedreply_email_id_key" UNIQUE("email_id")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "socialaccount_socialaccount" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "socialaccount_socialaccount_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"provider" varchar(200) NOT NULL,
	"uid" varchar(191) NOT NULL,
	"last_login" timestamp with time zone NOT NULL,
	"date_joined" timestamp with time zone NOT NULL,
	"extra_data" jsonb NOT NULL,
	"user_id" integer NOT NULL,
	CONSTRAINT "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" UNIQUE("provider","uid")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "django_site" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "django_site_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"domain" varchar(100) NOT NULL,
	"name" varchar(50) NOT NULL,
	CONSTRAINT "django_site_domain_a2e37b91_uniq" UNIQUE("domain")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "socialaccount_socialapp_sites" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "socialaccount_socialapp_sites_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"socialapp_id" integer NOT NULL,
	"site_id" integer NOT NULL,
	CONSTRAINT "socialaccount_socialapp__socialapp_id_site_id_71a9a768_uniq" UNIQUE("socialapp_id","site_id")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "socialaccount_socialtoken" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "socialaccount_socialtoken_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"token" text NOT NULL,
	"token_secret" text NOT NULL,
	"expires_at" timestamp with time zone,
	"account_id" integer NOT NULL,
	"app_id" integer,
	CONSTRAINT "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" UNIQUE("account_id","app_id")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "workflows_workflowaction" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "workflows_workflowaction_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone NOT NULL,
	"action_type" text NOT NULL,
	"action_value" text NOT NULL,
	"workflow_id" bigint NOT NULL,
	"updated_at" timestamp with time zone NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "mailboxes_metadataapi" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "mailboxes_metadataapi_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"url" text NOT NULL,
	"hmac_secret" text NOT NULL,
	"is_enabled" boolean NOT NULL,
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"mailbox_id" bigint NOT NULL,
	"deleted_at" timestamp with time zone,
	CONSTRAINT "mailboxes_metadataapi_mailbox_id_key" UNIQUE("mailbox_id")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "mailboxes_subscription" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "mailboxes_subscription_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"stripe_subscription_id" varchar,
	"stripe_customer_id" varchar,
	"current_period_end" timestamp with time zone,
	"status" varchar,
	"organization_id" bigint,
	"canceled_at" timestamp with time zone,
	CONSTRAINT "mailboxes_subscription_organization_id_key" UNIQUE("organization_id")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "mailboxes_platformcustomer" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "mailboxes_platformcustomer_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"email" varchar(255) NOT NULL,
	"name" varchar,
	"value" numeric(12, 2),
	"links" jsonb,
	"mailbox_id" bigint NOT NULL,
	CONSTRAINT "mailboxes_platformcustomer_email_key" UNIQUE("email")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "mailboxes_aiusageevent" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "mailboxes_aiusageevent_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"updated_at" timestamp with time zone NOT NULL,
	"model_name" varchar NOT NULL,
	"query_type" varchar NOT NULL,
	"input_tokens_count" integer NOT NULL,
	"output_tokens_count" integer NOT NULL,
	"cost" numeric(12, 7) NOT NULL,
	"created_at" timestamp with time zone NOT NULL,
	"mailbox_id" bigint
);
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "conversations_email" ADD CONSTRAINT "conversations_email_conversation_id_391ad973_fk_conversat" FOREIGN KEY ("conversation_id") REFERENCES "public"."conversations_conversation"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "conversations_email" ADD CONSTRAINT "conversations_email_response_to_id_af0048dc_fk_conversat" FOREIGN KEY ("response_to_id") REFERENCES "public"."conversations_email"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "conversations_file" ADD CONSTRAINT "conversations_file_email_id_686bb83a_fk_conversations_email_id" FOREIGN KEY ("email_id") REFERENCES "public"."conversations_email"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "conversations_conversation" ADD CONSTRAINT "conversations_conver_assigned_to_id_327a1b36_fk_auth_user" FOREIGN KEY ("assigned_to_id") REFERENCES "public"."auth_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "conversations_conversation" ADD CONSTRAINT "conversations_conver_mailbox_id_7fb25662_fk_mailboxes" FOREIGN KEY ("mailbox_id") REFERENCES "public"."mailboxes_mailbox"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "conversations_escalation" ADD CONSTRAINT "conversations_escala_conversation_id_6a4dba67_fk_conversat" FOREIGN KEY ("conversation_id") REFERENCES "public"."conversations_conversation"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "conversations_note" ADD CONSTRAINT "conversations_note_conversation_id_a486ed4c_fk_conversat" FOREIGN KEY ("conversation_id") REFERENCES "public"."conversations_conversation"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "docs_category" ADD CONSTRAINT "docs_category_mailbox_id_1b7cb806_fk_mailboxes_mailbox_id" FOREIGN KEY ("mailbox_id") REFERENCES "public"."mailboxes_mailbox"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "docs_embedding" ADD CONSTRAINT "docs_embedding_article_id_819aefa0_fk_docs_article_id" FOREIGN KEY ("article_id") REFERENCES "public"."docs_article"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "mailboxes_stylelinter" ADD CONSTRAINT "mailboxes_stylelinte_organization_id_bd0f87bd_fk_mailboxes" FOREIGN KEY ("organization_id") REFERENCES "public"."mailboxes_organization"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "account_emailaddress" ADD CONSTRAINT "account_emailaddress_user_id_2c513194_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "public"."auth_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "account_emailconfirmation" ADD CONSTRAINT "account_emailconfirm_email_address_id_5b7f8c58_fk_account_e" FOREIGN KEY ("email_address_id") REFERENCES "public"."account_emailaddress"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "public"."auth_permission"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "public"."auth_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "workflows_workflowrun" ADD CONSTRAINT "workflows_workflowru_mailbox_id_f4c91218_fk_mailboxes" FOREIGN KEY ("mailbox_id") REFERENCES "public"."mailboxes_mailbox"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "workflows_workflowrun" ADD CONSTRAINT "workflows_workflowru_workflow_id_51c8c945_fk_workflows" FOREIGN KEY ("workflow_id") REFERENCES "public"."workflows_workflow"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "workflows_workflowrun" ADD CONSTRAINT "workflows_workflowru_conversation_id_2c4060e5_fk_conversat" FOREIGN KEY ("conversation_id") REFERENCES "public"."conversations_conversation"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "workflows_workflowrun" ADD CONSTRAINT "workflows_workflowru_email_id_8a2979e0_fk_conversat" FOREIGN KEY ("email_id") REFERENCES "public"."conversations_email"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "workflows_workflowrunaction" ADD CONSTRAINT "workflows_workflowru_workflow_run_id_11bd0888_fk_workflows" FOREIGN KEY ("workflow_run_id") REFERENCES "public"."workflows_workflowrun"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "public"."auth_group"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "public"."auth_permission"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "public"."django_content_type"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "public"."auth_group"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "public"."auth_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "authtoken_token" ADD CONSTRAINT "authtoken_token_user_id_35299eff_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "public"."auth_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "public"."auth_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "public"."django_content_type"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "docs_article" ADD CONSTRAINT "docs_article_category_id_69130478_fk_docs_category_id" FOREIGN KEY ("category_id") REFERENCES "public"."docs_category"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "mailboxes_userprofile" ADD CONSTRAINT "mailboxes_userprofil_organization_id_52e48204_fk_mailboxes" FOREIGN KEY ("organization_id") REFERENCES "public"."mailboxes_organization"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "mailboxes_userprofile" ADD CONSTRAINT "mailboxes_userprofile_user_id_d8150abc_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "public"."auth_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "workflows_workflow" ADD CONSTRAINT "workflows_workflow_mailbox_id_ef751436_fk_mailboxes_mailbox_id" FOREIGN KEY ("mailbox_id") REFERENCES "public"."mailboxes_mailbox"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "workflows_workflowconditiongroup" ADD CONSTRAINT "workflows_workflowco_workflow_id_69ab4c7d_fk_workflows" FOREIGN KEY ("workflow_id") REFERENCES "public"."workflows_workflow"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "workflows_workflowcondition" ADD CONSTRAINT "workflows_workflowco_workflow_condition_g_3ef7928b_fk_workflows" FOREIGN KEY ("workflow_condition_group_id") REFERENCES "public"."workflows_workflowconditiongroup"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "mailboxes_mailbox" ADD CONSTRAINT "mailboxes_mailbox_gmail_support_email__3447a558_fk_mailboxes" FOREIGN KEY ("gmail_support_email_id") REFERENCES "public"."mailboxes_gmailsupportemail"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "mailboxes_mailbox" ADD CONSTRAINT "mailboxes_mailbox_organization_id_ad570054_fk_mailboxes" FOREIGN KEY ("organization_id") REFERENCES "public"."mailboxes_organization"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "mailboxes_pinnedreply" ADD CONSTRAINT "mailboxes_pinnedrepl_mailbox_id_75fd0196_fk_mailboxes" FOREIGN KEY ("mailbox_id") REFERENCES "public"."mailboxes_mailbox"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "mailboxes_pinnedreply" ADD CONSTRAINT "mailboxes_pinnedrepl_email_id_3c08d87a_fk_conversat" FOREIGN KEY ("email_id") REFERENCES "public"."conversations_email"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "socialaccount_socialaccount" ADD CONSTRAINT "socialaccount_socialaccount_user_id_8146e70c_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "public"."auth_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "socialaccount_socialapp_sites" ADD CONSTRAINT "socialaccount_social_site_id_2579dee5_fk_django_si" FOREIGN KEY ("site_id") REFERENCES "public"."django_site"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "socialaccount_socialapp_sites" ADD CONSTRAINT "socialaccount_social_socialapp_id_97fb6e7d_fk_socialacc" FOREIGN KEY ("socialapp_id") REFERENCES "public"."socialaccount_socialapp"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "socialaccount_socialtoken" ADD CONSTRAINT "socialaccount_social_account_id_951f210e_fk_socialacc" FOREIGN KEY ("account_id") REFERENCES "public"."socialaccount_socialaccount"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "socialaccount_socialtoken" ADD CONSTRAINT "socialaccount_social_app_id_636a42d7_fk_socialacc" FOREIGN KEY ("app_id") REFERENCES "public"."socialaccount_socialapp"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "workflows_workflowaction" ADD CONSTRAINT "workflows_workflowac_workflow_id_fee44fb7_fk_workflows" FOREIGN KEY ("workflow_id") REFERENCES "public"."workflows_workflow"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "mailboxes_metadataapi" ADD CONSTRAINT "mailboxes_metadataap_mailbox_id_e27adb53_fk_mailboxes" FOREIGN KEY ("mailbox_id") REFERENCES "public"."mailboxes_mailbox"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "mailboxes_subscription" ADD CONSTRAINT "mailboxes_subscripti_organization_id_375a29f9_fk_mailboxes" FOREIGN KEY ("organization_id") REFERENCES "public"."mailboxes_organization"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "mailboxes_platformcustomer" ADD CONSTRAINT "mailboxes_platformcu_mailbox_id_58ea76bf_fk_mailboxes" FOREIGN KEY ("mailbox_id") REFERENCES "public"."mailboxes_mailbox"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "mailboxes_aiusageevent" ADD CONSTRAINT "mailboxes_aiusageeve_mailbox_id_a4908f79_fk_mailboxes" FOREIGN KEY ("mailbox_id") REFERENCES "public"."mailboxes_mailbox"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversatio_created_c4e0d1_idx" ON "conversations_email" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_email_conversation_id_391ad973" ON "conversations_email" USING btree ("conversation_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_email_created_at_3250a33a" ON "conversations_email" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_email_gmail_message_id_3f6ee5ab" ON "conversations_email" USING btree ("gmail_message_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_email_gmail_message_id_3f6ee5ab_like" ON "conversations_email" USING btree ("gmail_message_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_email_gmail_thread_id_68f031bf" ON "conversations_email" USING btree ("gmail_thread_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_email_gmail_thread_id_68f031bf_like" ON "conversations_email" USING btree ("gmail_thread_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_email_is_pinned_ab83d24f" ON "conversations_email" USING btree ("is_pinned");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_email_message_id_a19e9ac9" ON "conversations_email" USING btree ("message_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_email_message_id_a19e9ac9_like" ON "conversations_email" USING btree ("message_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_email_response_to_id_af0048dc" ON "conversations_email" USING btree ("response_to_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_email_skipped_generating_response_at_bc702570" ON "conversations_email" USING btree ("skipped_generating_response_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_email_user_id_c1318366" ON "conversations_email" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversatio_created_9fddde_idx" ON "conversations_file" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_file_created_at_1bdcc162" ON "conversations_file" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_file_email_id_686bb83a" ON "conversations_file" USING btree ("email_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_file_slug_9b94ee8f_like" ON "conversations_file" USING btree ("slug");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "auth_group_name_a6ea08ec_like" ON "auth_group" USING btree ("name");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_conversation_assigned_to_id_327a1b36" ON "conversations_conversation" USING btree ("assigned_to_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_conversation_closed_at_16474e94" ON "conversations_conversation" USING btree ("closed_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_conversation_created_at_1ec48787" ON "conversations_conversation" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_conversation_email_from_aab3d292" ON "conversations_conversation" USING btree ("email_from");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_conversation_email_from_aab3d292_like" ON "conversations_conversation" USING btree ("email_from");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_conversation_external_conversation_id_ad4f1283" ON "conversations_conversation" USING btree ("external_conversation_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_conversation_external_customer_id_2c2eb6a2" ON "conversations_conversation" USING btree ("external_customer_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_conversation_last_user_email_created_at_fc6b89db" ON "conversations_conversation" USING btree ("last_user_email_created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_conversation_mailbox_id_7fb25662" ON "conversations_conversation" USING btree ("mailbox_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_conversation_slug_9924e9b1_like" ON "conversations_conversation" USING btree ("slug");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_conversation_status_c5b08f82" ON "conversations_conversation" USING btree ("status");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_conversation_status_c5b08f82_like" ON "conversations_conversation" USING btree ("status");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_conversation_subject_8c64da29" ON "conversations_conversation" USING btree ("subject");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_conversation_subject_8c64da29_like" ON "conversations_conversation" USING btree ("subject");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "embedding_vector_index" ON "conversations_conversation" USING hnsw ("embedding" vector_cosine_ops);--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversatio_created_176a78_idx" ON "conversations_escalation" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_escalation_conversation_id_6a4dba67" ON "conversations_escalation" USING btree ("conversation_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_escalation_created_at_bfd17986" ON "conversations_escalation" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversatio_created_5ad461_idx" ON "conversations_note" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_note_conversation_id_a486ed4c" ON "conversations_note" USING btree ("conversation_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_note_created_at_b6f30416" ON "conversations_note" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_note_user_id_bb7dbd33" ON "conversations_note" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_reply_conversation_id_d42788de" ON "conversations_reply_bk" USING btree ("conversation_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_reply_created_at_8b4e8d6e" ON "conversations_reply_bk" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_reply_is_ignored_a236019b" ON "conversations_reply_bk" USING btree ("is_ignored");--> statement-breakpoint
CREATE UNIQUE INDEX IF NOT EXISTS "conversations_reply_pkey" ON "conversations_reply_bk" USING btree ("id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "conversations_reply_user_id_f3b0b709" ON "conversations_reply_bk" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "converstaions_reply_mailbox_id" ON "conversations_reply_bk" USING btree ("mailbox_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" USING btree ("expire_date");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "django_session_session_key_c0390e0f_like" ON "django_session" USING btree ("session_key");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "docs_category_created_at_2b4d17a1" ON "docs_category" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "docs_category_mailbox_id_1b7cb806" ON "docs_category" USING btree ("mailbox_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "docs_category_slug_881c9068" ON "docs_category" USING btree ("slug");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "docs_category_slug_881c9068_like" ON "docs_category" USING btree ("slug");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_gumroaduser_created_at_726627a7" ON "mailboxes_gumroaduser" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_gumroaduser_email_f7d538a4_like" ON "mailboxes_gumroaduser" USING btree ("email");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "docs_embedding_article_id_819aefa0" ON "docs_embedding" USING btree ("article_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "docs_embedding_created_at_62460b5f" ON "docs_embedding" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_transactionalemailaddressregex_created_at_76591756" ON "mailboxes_transactionalemailaddressregex" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_transactionalemailaddressregex_regex_cc8d0d78_like" ON "mailboxes_transactionalemailaddressregex" USING btree ("email_regex");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_waitlistemail_created_at_b448a0a4" ON "mailboxes_waitlistemail" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_waitlistemail_email_0903f096_like" ON "mailboxes_waitlistemail" USING btree ("email");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_stylelinter_created_at_05c6d9c6" ON "mailboxes_stylelinter" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_stylelinter_organization_id_bd0f87bd" ON "mailboxes_stylelinter" USING btree ("organization_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "account_emailaddress_email_03be32b2" ON "account_emailaddress" USING btree ("email");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "account_emailaddress_email_03be32b2_like" ON "account_emailaddress" USING btree ("email");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" USING btree ("user_id");--> statement-breakpoint
CREATE UNIQUE INDEX IF NOT EXISTS "unique_primary_email" ON "account_emailaddress" USING btree ("user_id","primary") WHERE "primary";--> statement-breakpoint
CREATE UNIQUE INDEX IF NOT EXISTS "unique_verified_email" ON "account_emailaddress" USING btree ("email") WHERE verified;--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" USING btree ("email_address_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_key_f43612bd_like" ON "account_emailconfirmation" USING btree ("key");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" USING btree ("permission_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "workflows_workflowrun_conversation_id_2c4060e5" ON "workflows_workflowrun" USING btree ("conversation_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "workflows_workflowrun_created_at_071c8616" ON "workflows_workflowrun" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "workflows_workflowrun_email_id_8a2979e0" ON "workflows_workflowrun" USING btree ("email_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "workflows_workflowrun_mailbox_id_f4c91218" ON "workflows_workflowrun" USING btree ("mailbox_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "workflows_workflowrun_workflow_id_51c8c945" ON "workflows_workflowrun" USING btree ("workflow_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "workflows_workflowrunaction_created_at_630b1ff6" ON "workflows_workflowrunaction" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "workflows_workflowrunaction_workflow_run_id_11bd0888" ON "workflows_workflowrunaction" USING btree ("workflow_run_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" USING btree ("group_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" USING btree ("permission_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "auth_user_username_6821ab7c_like" ON "auth_user" USING btree ("username");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" USING btree ("content_type_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "auth_user_groups_group_id_97559544" ON "auth_user_groups" USING btree ("group_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "authtoken_token_key_10f0b77e_like" ON "authtoken_token" USING btree ("key");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" USING btree ("content_type_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "docs_article_category_id_69130478" ON "docs_article" USING btree ("category_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "docs_article_created_at_2fd1ba35" ON "docs_article" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "docs_article_slug_5fce8216" ON "docs_article" USING btree ("slug");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "docs_article_slug_5fce8216_like" ON "docs_article" USING btree ("slug");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_userprofile_created_at_a4fee7db" ON "mailboxes_userprofile" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_userprofile_organization_id_52e48204" ON "mailboxes_userprofile" USING btree ("organization_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "workflows_workflow_created_at_d46aca0c" ON "workflows_workflow" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "workflows_workflow_mailbox_id_ef751436" ON "workflows_workflow" USING btree ("mailbox_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "workflows_workflowconditiongroup_created_at_420e78cf" ON "workflows_workflowconditiongroup" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "workflows_workflowconditiongroup_workflow_id_69ab4c7d" ON "workflows_workflowconditiongroup" USING btree ("workflow_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "workflows_workflowconditio_workflow_condition_group_i_3ef7928b" ON "workflows_workflowcondition" USING btree ("workflow_condition_group_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "workflows_workflowcondition_created_at_c803fb7f" ON "workflows_workflowcondition" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_mailbox_created_at_5d4ea7d0" ON "mailboxes_mailbox" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_mailbox_custom_email_address_3affd502_like" ON "mailboxes_mailbox" USING btree ("custom_email_address");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_mailbox_organization_id_ad570054" ON "mailboxes_mailbox" USING btree ("organization_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_mailbox_slug_11625ddd_like" ON "mailboxes_mailbox" USING btree ("slug");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_gmailsupportemail_created_at_321a00f1" ON "mailboxes_gmailsupportemail" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_supportemail_email_99536dd8_like" ON "mailboxes_gmailsupportemail" USING btree ("email");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_organization_created_at_c76ba2fb" ON "mailboxes_organization" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_pinnedreply_created_at_845e5873" ON "mailboxes_pinnedreply" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_pinnedreply_mailbox_id_75fd0196" ON "mailboxes_pinnedreply" USING btree ("mailbox_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "pinned_reply_embedding_index" ON "mailboxes_pinnedreply" USING hnsw ("embedding" vector_cosine_ops);--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "django_site_domain_a2e37b91_like" ON "django_site" USING btree ("domain");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" USING btree ("site_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" USING btree ("socialapp_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" USING btree ("account_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" USING btree ("app_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "workflows_workflowaction_created_at_6e3a55d9" ON "workflows_workflowaction" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "workflows_workflowaction_workflow_id_fee44fb7" ON "workflows_workflowaction" USING btree ("workflow_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_metadataapi_created_at_1ee2d2c2" ON "mailboxes_metadataapi" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_subscription_created_at_2852d657" ON "mailboxes_subscription" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_platformcustomer_created_at_73183c2a" ON "mailboxes_platformcustomer" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_platformcustomer_email_fde42ed0_like" ON "mailboxes_platformcustomer" USING btree ("email");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_platformcustomer_mailbox_id_58ea76bf" ON "mailboxes_platformcustomer" USING btree ("mailbox_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_aiusageevent_created_at_74823d57" ON "mailboxes_aiusageevent" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_aiusageevent_mailbox_id_a4908f79" ON "mailboxes_aiusageevent" USING btree ("mailbox_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_aiusageevent_model_name_84b8ca7a" ON "mailboxes_aiusageevent" USING btree ("model_name");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_aiusageevent_model_name_84b8ca7a_like" ON "mailboxes_aiusageevent" USING btree ("model_name");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_aiusageevent_query_type_b4a486cb" ON "mailboxes_aiusageevent" USING btree ("query_type");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "mailboxes_aiusageevent_query_type_b4a486cb_like" ON "mailboxes_aiusageevent" USING btree ("query_type");
